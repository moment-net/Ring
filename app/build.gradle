//****************************************
//************ app 壳的配置文件 ************
//****************************************

import com.alan.mvvm.buildsrc.*

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.huawei.agconnect'

android {
    compileSdkVersion ProjectBuildConfig.compileSdkVersion
    buildToolsVersion ProjectBuildConfig.buildToolsVersion

    defaultConfig {
        applicationId ProjectBuildConfig.applicationId
        minSdkVersion ProjectBuildConfig.minSdkVersion
        targetSdkVersion ProjectBuildConfig.targetSdkVersion
        versionCode ProjectBuildConfig.versionCode
        versionName ProjectBuildConfig.versionName
        multiDexEnabled = true
        testInstrumentationRunner DependencyConfig.AndroidX.AndroidJUnitRunner
        multiDexKeepProguard file("multidexKeep.pro")
        flavorDimensions "versionCode"

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true",
                        "AROUTER_MODULE_NAME":project.name]
            }
        }

        //极光推送key
        manifestPlaceholders = [
                JPUSH_CHANNEL: "moment",
                JPUSH_APPKEY : "681b4ee25715ed9fa415e426",
                JPUSH_PKGNAME: "${applicationId}",
                XIAOMI_APPID:"MI-2882303761518745008",
                XIAOMI_APPKEY:"MI-5811874578008",
                OPPO_APPKEY:"OP-3217d0b2165a4c40b20a2ea1fb70b83b",
                OPPO_APPID:"OP-30394955",
                OPPO_APPSECRET:"OP-eb52fddb5b8b42628f600e09412f6ad7",
                VIVO_APPKEY:"6a6fdb8106f423a5ae982001c6fed921",
                VIVO_APPID:"104943129",
        ]
    }

    packagingOptions {
        doNotStrip "*/armeabi/*.so"
        doNotStrip "*/armeabi-v7a/*.so"
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/x86/*.so"
        doNotStrip "*/x86_64/*.so"
        doNotStrip "*/mips/*.so"
        doNotStrip "*/mips64/*.so"
    }

//    //使用相对路径签名
    Properties props = new Properties()
    props.load(new FileInputStream(file("signing.properties")))
    signingConfigs {
        debug {
            storeFile file(props['KEYSTORE_FILE'])
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storePassword props['KEYSTORE_PASSWORD']
        }
        release {
            storeFile file(props['KEYSTORE_FILE'])
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storePassword props['KEYSTORE_PASSWORD']
        }
    }

    productFlavors {
        moment{}
//        yingyongbao{}
////        _360{}
//        xiaomi{}
//        huawei{}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [ JPUSH_CHANNEL:name ]
    }


    buildTypes {
        // 对应 ALPHA 版本
        debug {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.ALPHA}\""
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.BETA}\""
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.RELEASE}\""
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 自定义打包apk的文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                outputFileName = "${ProjectBuildConfig.applicationId}" +
                        "_${ProjectBuildConfig.versionCode}" +
                        "(${ProjectBuildConfig.versionName})" +
                        "_${variant.buildType.name}" +
                        ".apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    if (!ProjectBuildConfig.isAppMode) {
        // 有业务组件时 把这个去掉 这里只是为了使用base里的依赖库
        implementation project(path: ':module_main')
        implementation project(path: ':module_home')
        implementation project(path: ':module_chat')
        implementation project(path: ':module_my')
        implementation project(path: ':module_web')
    } else {
        implementation project(path: ':lib_common')
    }

    implementation DependencyConfig.JetPack.HiltCore
    kapt DependencyConfig.JetPack.HiltApt
    kapt DependencyConfig.JetPack.HiltAndroidx
    kapt DependencyConfig.JetPack.LifecycleCompilerAPT
    kapt DependencyConfig.JetPack.RoomApt
    kapt DependencyConfig.GitHub.ARouteCompiler
    kapt DependencyConfig.GitHub.EventBusAPT
    kapt DependencyConfig.GitHub.AutoServiceAnnotations
}